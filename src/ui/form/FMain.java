/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.form;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.List;
import java.util.Map;
import javax.swing.JPanel;
import jdk.nashorn.internal.runtime.RewriteException;
import shapes.Grafik;
import state.AcceptedState;
import state.CancelState;
import state.RejectState;
import state.ReviewState;
import state.State;
import state.WritingState;
import stateMachine.StateMachine;

/**
 *
 * @author Aleksa
 */
public class FMain extends javax.swing.JFrame {

    private stateMachine.StateMachine stateMachine;
    private State curentState;
    
    /**
     * Creates new form FMain
     */
    public FMain() {
        initComponents();
        setLocationRelativeTo(null);
        prepareStateMachine();
        prepareCurentState();
        prepareJComboNextStates();
        setCurentState();
        prepareStatePanel();
        colorStates();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        states = new javax.swing.JPanel();
        jlabWriting = new javax.swing.JLabel();
        jlabCancel = new javax.swing.JLabel();
        jlabReview = new javax.swing.JLabel();
        jlabAccepted = new javax.swing.JLabel();
        jlabReject = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlblCurentState = new javax.swing.JLabel();
        jcomboNextStates = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        btnNextState = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        states.setBorder(javax.swing.BorderFactory.createTitledBorder("States"));

        jlabWriting.setText("Wrining state");

        jlabCancel.setText("Cancel state");

        jlabReview.setText("Review state");

        jlabAccepted.setText("Accepted");

        jlabReject.setText("Reject state");

        javax.swing.GroupLayout statesLayout = new javax.swing.GroupLayout(states);
        states.setLayout(statesLayout);
        statesLayout.setHorizontalGroup(
            statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statesLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabWriting)
                    .addComponent(jlabReview)
                    .addComponent(jlabReject))
                .addGap(44, 44, 44)
                .addGroup(statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlabAccepted)
                    .addComponent(jlabCancel))
                .addContainerGap(196, Short.MAX_VALUE))
        );
        statesLayout.setVerticalGroup(
            statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statesLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabWriting)
                    .addComponent(jlabCancel))
                .addGap(32, 32, 32)
                .addGroup(statesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabReview)
                    .addComponent(jlabAccepted))
                .addGap(36, 36, 36)
                .addComponent(jlabReject)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jLabel1.setText("Curent state:");

        jLabel3.setText("Next state:");

        btnNextState.setText("Go to next state");
        btnNextState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextStateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(states, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlblCurentState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcomboNextStates, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNextState, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(states, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblCurentState, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcomboNextStates, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNextState))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextStateActionPerformed
        State nextState = (State) jcomboNextStates.getSelectedItem();
        curentState = nextState;
        prepareJComboNextStates();
        setCurentState();
        stateMachine.setCurentState(curentState);
        colorStates();
    }//GEN-LAST:event_btnNextStateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNextState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<State> jcomboNextStates;
    private javax.swing.JLabel jlabAccepted;
    private javax.swing.JLabel jlabCancel;
    private javax.swing.JLabel jlabReject;
    private javax.swing.JLabel jlabReview;
    private javax.swing.JLabel jlabWriting;
    private javax.swing.JLabel jlblCurentState;
    private javax.swing.JPanel states;
    // End of variables declaration//GEN-END:variables

    private void prepareStateMachine() {
        //u konstruktoru sam ubacio sva stanja za brzinu
        stateMachine = new StateMachine();
    }

    private void prepareCurentState() {
        curentState = stateMachine.getCurentState();
    }

    private void prepareJComboNextStates() {
        jcomboNextStates.removeAllItems();
        Map<State,List<State>> map = stateMachine.getModel();
        List<State> states = map.get(curentState);
        if (states != null && states.size() != 0) {
            for (State state : states) {
                jcomboNextStates.addItem(state);
            }
        }else {
            System.out.println("doslo je do greske!");
        }
    }

    private void prepareStatePanel() {
        Canvas canvas = new Grafik(stateMachine);
        canvas.setSize(300, 200);
        states.add(canvas);
        canvas.setLocation(30, 30);
        pack();
    }

    private void setCurentState() {
        jlblCurentState.setText(curentState.toString());
    }

    private void colorStates() {
        if (curentState.equals(new AcceptedState())) {
            jlabAccepted.setForeground(Color.GREEN);
        }else jlabAccepted.setForeground(Color.red);
        
        if (curentState.equals(new CancelState())) {
            jlabCancel.setForeground(Color.GREEN);
        }else jlabCancel.setForeground(Color.red);
        
        if (curentState.equals(new ReviewState())) {
            jlabReview.setForeground(Color.GREEN);
        }else jlabReview.setForeground(Color.red);
        
        if (curentState.equals(new RejectState())) {
            jlabReject.setForeground(Color.GREEN);
        }else jlabReject.setForeground(Color.red);
        
        if (curentState.equals(new WritingState())) {
            jlabWriting.setForeground(Color.GREEN);
        }else jlabWriting.setForeground(Color.red);
    }
}
